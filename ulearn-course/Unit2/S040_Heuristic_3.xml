<?xml-model href="../ulearn.xsd"?>
<slide.exercise id="e517ac4d-9f6b-4ea8-8126-42daf5d95bc7" title="Оптимальное торможение" xmlns="https://ulearn.me/schema/v2">
  <scoring group="code" passedTestsScore="2"/>
  <markdown>
    Ура!
    Теперь машинка ведёт себя намного лучше, не зависает на орбите чекпоинтов и может проходить несколько кругов по трассе.
    Но не время останавливаться, ведь нет предела совершенству!

    Давайте внимательно посмотрим, как ведёт себя машинка на наших тестах. Особенно интересным выглядит поведение при сборе чекпоинтов.
    Можно заметить, что машинка всегда проносится через контрольные точки на большой скорости.

    Что же происходит, если следующий чекпоинт находится в противоположном направлении?
    Правильно, машинка тратит лишнее время на остановку и разворот.

    Время научить машинку собирать чекпоинты аккуратнее.
    Для этого нужно понять, когда же мы должны перестать разгоняться.

    Ответить на этот вопрос на поможет картинка:
  </markdown>
  <galleryImages>
    <image>images\when_use_break.png</image>
  </galleryImages>
  <markdown>
    Допустим, что машинка сейчас едет со скоростью **V** по направлению к чекпоинту. Нам хочется вычислить **d** - расстояние, на котором стоит перестать ускоряться.
    В конце каждого хода за счёт силы трения текущая скорость машинки умножается на 0.85.

    Давайте посчитаем, какой путь пройдет машинка за каждый ход.
    За первый ход будет пройдено **V**, за второй - **(0.85)V**, за третий - **(0.85)^2V** и так далее. Это же **геометрическая прогрессия!**

    Применяя формулу суммы бесконечно убывающей геометрической прогресии, получаем, что в всего машинка пройдет **V/(1-0.85)** условных единиц.

    Осталось лишь сравнить с суммой текущее расстояние до чекпоинта.


  </markdown>
  <exercise.universal exerciseDirName="Search_Race/Heuristic" noStudentZip="true" type="check-exit-code">
    <checkForPlagiarism>false</checkForPlagiarism>
    <hideSolutions>true</hideSolutions>
    <hideExpectedOutput>true</hideExpectedOutput>
    <userCodeFile>heuristic3.py</userCodeFile>
    <dockerImageName>algorithms-sandbox</dockerImageName>
    <run>python3.8 runner.py heuristic_runner_tests Heuristic3Tests</run>
  </exercise.universal>
</slide.exercise>
